package: "Fundamental organizational unit in Trilinos."

linear_solver: "Software that finds a solution vector x for Ax = b, given a known matrix A and vector b."

trilinos_package: "The basic unit of software management in Trilinos.  A package has a distinct team, development process and user community."

user_developer: "A person who both uses capabilities developed by others and develops capabilities used by others.  Most Trilinos developers are user-developers."

epetra_stack: "Trilinos capabilities built on the Epetra data classes. This stack is designed for MPI-only parallel execution."

tpetra_stack: "Trilinos capabilities built on the Tpetra data classes. This stack is designed for MPI+X parallel execution, where X represents multi-core, vector, GPU parallelism."

sparse_linear_solver: "Software that solves systems Ax = b, where A has enough zeros that it makes sense to keep track of what is zero or day_introductory_course_on_trilinos."

sparse_problem: "A problem such that dependencies, if expressed as a matrix, has enough zeros that it makes sense to keep track of what is zero or not."

nonlinear_solver: "Software that finds a solution vector u for F(u) = 0, where F() is a nonlinear function."

transient_solver: "Software that finds a solution vector x(t) at time t to satisfy dx/dt = f(x, t), x(0) = x0."

parallel_linear_algebra_kernels: "Software that computes results such as vector dot products (alpha = x*x') and matrix vector multiplication y = Ax on a parallel computer."

parallel_sparse_kernels: "Software that takes into account matrix or graph sparsity, such as sparse matrix-vector multiplication and graph partition for parallel efficiency."

optimization_solver: "Software that finds u such that u maximizes or minimizes F(u) for some function F()."

uq_solver: "Software that quantifies the uncertainty of a given solution with a certain probability."

mpi: "The Message Passing Interface (MPI) is the primary interface for realizing parallel execution on distributed memory computers.  MPI libraries such as MPICH, OpenMPI and MVAPICH enable parallel execution on dozens to millions of processors."

multicore: "Processor with multiple cores that enable parallel execution, usually with access to the same pool of shared memory."

accelerator: "A computing device designed for high-throughput parallel execution.  Sometimes called GPUs."

vectorization: "A form of parallelism particularly well suited to performing the same sequence of operations on arrays of values."
